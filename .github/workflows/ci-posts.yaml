name: CI-Posts

on:
  push:
    branches: [klanthier/performance-testing]
#   push:
#     branches: [master]
#     paths: ['apps/posts/**', 'packages/**']
#   pull_request:
#     branches: [master]
#     paths: ['apps/posts/**', 'packages/**']

jobs:
  build:
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    name: Build with ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run build -- --scope=posts

      - name: Archive build output
        uses: actions/upload-artifact@v3
        with:
          name: posts-build
          path: |
            apps/posts/dist

  test:
    strategy:
      matrix:
        node-version: [16.x]

    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Retrieve Git history, needed to verify commits
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install

      - if: github.event_name == 'pull_request'
        name: Validate all commits from PR
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Linter
        run: npm run lint -- --scope=posts

      - name: Run unit tests
        run: npm run test -- --scope=posts

  smoke-test:
    needs: [build, test]
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16.x]

    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:admin@localhost:5432/postgres?schema=posts
      API_URL: http://localhost:3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install

      - uses: actions/download-artifact@v3
        with:
          name: posts-build
          path: apps/posts/dist

      - name: Compile test file
        run: |
          npm run prepare:performance -- --scope=posts

      - name: Prepare database
        run: |
          npm run migrate -- --scope=posts

      - name: Install k6
        run: |
          curl https://github.com/loadimpact/k6/releases/download/v0.26.2/k6-v0.26.2-linux64.tar.gz -L | tar xvz --strip-components 1

      - name: Start server and run tests
        run: |
          node apps/posts/dist/src/main & npx wait-on http://localhost:3001
          ./k6 run apps/posts/test/performance/smoke-test.js

  spike-test:
    needs: [build, test]
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16.x]

    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:admin@localhost:5432/postgres?schema=posts
      API_URL: http://localhost:3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install

      - uses: actions/download-artifact@v3
        with:
          name: posts-build
          path: apps/posts/dist

      - name: Compile test file
        run: |
          npm run prepare:performance -- --scope=posts

      - name: Prepare database
        run: |
          npm run migrate -- --scope=posts

      - name: Install k6
        run: |
          curl https://github.com/loadimpact/k6/releases/download/v0.26.2/k6-v0.26.2-linux64.tar.gz -L | tar xvz --strip-components 1

      - name: Start server and run tests
        run: |
          node apps/posts/dist/src/main & npx wait-on http://localhost:3001
          ./k6 run apps/posts/test/performance/spike-test.js

  load-test:
    needs: [build, test]
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16.x]

    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:admin@localhost:5432/postgres?schema=posts
      API_URL: http://localhost:3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install

      - uses: actions/download-artifact@v3
        with:
          name: posts-build
          path: apps/posts/dist

      - name: Compile test file
        run: |
          npm run prepare:performance -- --scope=posts

      - name: Prepare database
        run: |
          npm run migrate -- --scope=posts

      - name: Install k6
        run: |
          curl https://github.com/loadimpact/k6/releases/download/v0.26.2/k6-v0.26.2-linux64.tar.gz -L | tar xvz --strip-components 1

      - name: Start server and run tests
        run: |
          node apps/posts/dist/src/main & npx wait-on http://localhost:3001
          ./k6 run apps/posts/test/performance/load-test.js

  stress-test:
    needs: [build, test]
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [16.x]

    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:admin@localhost:5432/postgres?schema=posts
      API_URL: http://localhost:3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install

      - uses: actions/download-artifact@v3
        with:
          name: posts-build
          path: apps/posts/dist

      - name: Compile test file
        run: |
          npm run prepare:performance -- --scope=posts

      - name: Prepare database
        run: |
          npm run migrate -- --scope=posts

      - name: Install k6
        run: |
          curl https://github.com/loadimpact/k6/releases/download/v0.26.2/k6-v0.26.2-linux64.tar.gz -L | tar xvz --strip-components 1

      - name: Start server and run tests
        run: |
          node apps/posts/dist/src/main & npx wait-on http://localhost:3001
          ./k6 run apps/posts/test/performance/stress-test.js

  release:
    strategy:
      matrix:
        node-version: [16.x]

    name: Create a new release
    runs-on: ubuntu-latest
    needs: [test, smoke-test, spike-test, load-test, stress-test]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: HUSKY=0 npm ci

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
